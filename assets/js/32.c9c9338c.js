(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{353:function(e,t,o){"use strict";o.r(t);var n=o(12),a=Object(n.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"weblogic数据源"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#weblogic数据源"}},[e._v("#")]),e._v(" Weblogic数据源")]),e._v(" "),t("h2",{attrs:{id:"_1-官方文档"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-官方文档"}},[e._v("#")]),e._v(" 1. 官方文档")]),e._v(" "),t("p",[e._v("https://docs.oracle.com/en/")]),e._v(" "),t("p",[e._v("https://docs.oracle.com/cd/E13222_01/wls/docs90/ConsoleHelp/pagehelp/JDBCjdbcdatasourcesjdbcdatasourceconfigconnectionpooltitle.html")]),e._v(" "),t("h2",{attrs:{id:"_2-连接池配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-连接池配置"}},[e._v("#")]),e._v(" 2. 连接池配置")]),e._v(" "),t("p",[e._v("The connection pool within a JDBC data source contains a group of JDBC connections that applications reserve, use, and then return to the pool. The connection pool and the connections within it are created when the connection pool is registered, usually when starting up WebLogic Server or when deploying the data source to a new target.")]),e._v(" "),t("p",[e._v("Use this page to define the configuration for this data source's connection pool.")]),e._v(" "),t("p",[t("strong",[e._v("Configuration Options")])]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Name")]),e._v(" "),t("th",[e._v("Description")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("URL")]),e._v(" "),t("td",[e._v("The URL of the database to connect to. The format of the URL varies by JDBC driver.The URL is passed to the JDBC driver to create the physical database connections.MBean Attribute (Does not apply to application modules): "),t("code",[e._v("JDBCDriverParamsBean.Url")]),t("a",{attrs:{href:"https://docs.oracle.com/cd/E13222_01/wls/docs90/ConsoleHelp/core/restart.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Changes take effect after you redeploy the module or restart the server."),t("OutboundLink")],1)])]),e._v(" "),t("tr",[t("td",[e._v("Driver Class Name")]),e._v(" "),t("td",[e._v("The full package name of JDBC driver class used to create the physical database connections in the connection pool. (Note that this driver class must be in the classpath of any server to which it is deployed.)MBean Attribute (Does not apply to application modules): "),t("code",[e._v("JDBCDriverParamsBean.DriverName")]),t("a",{attrs:{href:"https://docs.oracle.com/cd/E13222_01/wls/docs90/ConsoleHelp/core/restart.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Changes take effect after you redeploy the module or restart the server."),t("OutboundLink")],1)])]),e._v(" "),t("tr",[t("td",[e._v("Properties")]),e._v(" "),t("td",[e._v('The list of properties passed to the JDBC driver that are used to create physical database connections. For example: server=dbserver1. List each property=value pair on a separate line.To enable driver-level features, add the driver property and its value to the Properties list. WebLogic Server sets driver-level properties in the Properties list on the driver\'s ConnectionPoolDataSource object.Note:For security reasons, when WebLogic Server is running in Production mode, you cannot specify database passwords in this properties list. Data source deployment will fail if a password is specified in the properties list. To override this security check, use the command line argument "weblogic.management.allowClearTextPasswords" when starting the server.MBean Attribute (Does not apply to application modules): '),t("code",[e._v("JDBCDriverParamsBean.Properties")]),t("a",{attrs:{href:"https://docs.oracle.com/cd/E13222_01/wls/docs90/ConsoleHelp/core/restart.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Changes take effect after you redeploy the module or restart the server."),t("OutboundLink")],1)])]),e._v(" "),t("tr",[t("td",[e._v("Password")]),e._v(" "),t("td",[e._v("The password attribute passed to the JDBC driver when creating physical database connections.The value is stored in an encrypted form in the descriptor file and when displayed on the Administration Console.MBean Attribute (Does not apply to application modules): "),t("code",[e._v("JDBCDriverParamsBean.Password")]),t("a",{attrs:{href:"https://docs.oracle.com/cd/E13222_01/wls/docs90/ConsoleHelp/core/restart.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Changes take effect after you redeploy the module or restart the server."),t("OutboundLink")],1)])]),e._v(" "),t("tr",[t("td",[e._v("Confirm Password")]),e._v(" "),t("td",[e._v("Confirm your Password.")])]),e._v(" "),t("tr",[t("td",[e._v("Initial Capacity")]),e._v(" "),t("td",[e._v("The number of physical connections to create when creating the connection pool.If unable to create this number of connections, creation of this connection pool will fail.This is also the minimum number of physical connections the connection pool will keep available.Minimum value: "),t("code",[e._v("0")]),e._v("Maximum value: "),t("code",[e._v("2147483647")]),t("a",{attrs:{href:"https://docs.oracle.com/cd/E13222_01/wls/docs90/ConsoleHelp/core/restart.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Changes take effect after you redeploy the module or restart the server."),t("OutboundLink")],1)])]),e._v(" "),t("tr",[t("td",[e._v("Maximum Capacity")]),e._v(" "),t("td",[e._v("The maximum number of physical connections that this connection pool can contain."),t("a",{attrs:{href:"https://docs.oracle.com/cd/E13222_01/wls/docs90/ConsoleHelp/core/restart.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Changes take effect after you redeploy the module or restart the server."),t("OutboundLink")],1)])]),e._v(" "),t("tr",[t("td",[e._v("Capacity Increment")]),e._v(" "),t("td",[e._v("The number of connections created when new connections are added to the connection pool.When there are no more available physical connections to satisfy connection requests, WebLogic Server creates this number of additional physical connections and adds them to the connection pool.MBean Attribute (Does not apply to application modules): "),t("code",[e._v("JDBCConnectionPoolParamsBean.CapacityIncrement")]),e._v("Minimum value: "),t("code",[e._v("1")]),e._v("Maximum value: "),t("code",[e._v("2147483647")])])]),e._v(" "),t("tr",[t("td",[e._v("Statement Cache Type")]),e._v(" "),t("td",[e._v("The algorithm used for maintaining the prepared statements stored in the statement cache.Options are:LRU - when a new prepared or callable statement is used, the least recently used statement is replaced in the cache.FIXED - the first fixed number of prepared and callable statements are cached.  MBean Attribute (Does not apply to application modules): "),t("code",[e._v("JDBCConnectionPoolParamsBean.StatementCacheType")]),t("a",{attrs:{href:"https://docs.oracle.com/cd/E13222_01/wls/docs90/ConsoleHelp/core/restart.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Changes take effect after you redeploy the module or restart the server."),t("OutboundLink")],1)])]),e._v(" "),t("tr",[t("td",[e._v("Statement Cache Size")]),e._v(" "),t("td",[e._v("The number of prepared and callable statements stored in the cache. (This may increase server performance.)WebLogic Server can reuse statements in the cache without reloading the statements, which can increase server performance. Each connection in the connection pool has its own cache of statements.Setting the size of the statement cache to 0 turns off statement caching.MBean Attribute (Does not apply to application modules): "),t("code",[e._v("JDBCConnectionPoolParamsBean.StatementCacheSize")]),e._v("Minimum value: "),t("code",[e._v("0")]),e._v("Maximum value: "),t("code",[e._v("1024")])])])])]),e._v(" "),t("p",[t("strong",[e._v("Advanced Configuration Options")])]),e._v(" "),t("table",[t("thead",[t("tr",[t("th",[e._v("Name")]),e._v(" "),t("th",[e._v("Description")])])]),e._v(" "),t("tbody",[t("tr",[t("td",[e._v("Test Table Name")]),e._v(" "),t("td",[e._v("The name of the database table to use when testing physical database connections. This name is required when you specify a Test Frequency and enable Test Reserved Connections.The default SQL code used to test a connection is "),t("code",[e._v('"select count(*) from TestTableName"')]),e._v("Most database servers optimize this SQL to avoid a table scan, but it is still a good idea to set the Test Table Name to the name of a table that is known to have few rows, or even no rows.If the Test Table Name begins with "),t("code",[e._v('"SQL "')]),e._v(", then the rest of the string following that leading token will be taken as a literal SQL statement that will be used to test connections instead of the standard query.MBean Attribute (Does not apply to application modules): "),t("code",[e._v("JDBCConnectionPoolParamsBean.TestTableName")])])]),e._v(" "),t("tr",[t("td",[e._v("Init SQL")]),e._v(" "),t("td",[e._v("SQL statement to execute that will initialize newly created physical database connections. Start the statement with SQL followed by a space.If the Init SQL value begins with "),t("code",[e._v('"SQL "')]),e._v(', then the rest of the string following that leading token will be taken as a literal SQL statement that will be used to initialize database connections. If the Init SQL value does not begin with "SQL ", the value will be treated as the name of a table and the following SQL statement will be used to initialize connections:'),t("code",[e._v('"select count(*) from InitSQL"')]),e._v("The table "),t("code",[e._v("InitSQL")]),e._v(" must exist and be accessible to the database user for the connection. Most database servers optimize this SQL to avoid a table scan, but it is still a good idea to set "),t("code",[e._v("InitSQL")]),e._v(" to the name of a table that is known to have few rows, or even no rows.MBean Attribute (Does not apply to application modules): "),t("code",[e._v("JDBCConnectionPoolParamsBean.InitSql")]),t("a",{attrs:{href:"https://docs.oracle.com/cd/E13222_01/wls/docs90/ConsoleHelp/core/restart.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Changes take effect after you redeploy the module or restart the server."),t("OutboundLink")],1)])]),e._v(" "),t("tr",[t("td",[e._v("Test Connections On Reserve")]),e._v(" "),t("td",[e._v("Enables WebLogic Server to test a connection before giving it to a client. (Requires that you specify a Test Table Name.)The test adds a small delay in serving the client's request for a connection from the pool, but ensures that the client receives a viable connection.This test is required for connection pools used in a multi data source that use the "),t("code",[e._v("failover")]),e._v(" algorithm."),t("a",{attrs:{href:"https://docs.oracle.com/cd/E13222_01/wls/docs90/ConsoleHelp/core/restart.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Changes take effect after you redeploy the module or restart the server."),t("OutboundLink")],1)])]),e._v(" "),t("tr",[t("td",[e._v("Test Frequency")]),e._v(" "),t("td",[e._v("The number of seconds between when WebLogic Server tests unused connections. (Requires that you specify a Test Table Name.) Connections that fail the test are closed and reopened to re-establish a valid physical connection. If the test fails again, the connection is closed.When set to "),t("code",[e._v("0")]),e._v(", periodic testing is disabled."),t("a",{attrs:{href:"https://docs.oracle.com/cd/E13222_01/wls/docs90/ConsoleHelp/core/restart.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Changes take effect after you redeploy the module or restart the server."),t("OutboundLink")],1)])]),e._v(" "),t("tr",[t("td",[e._v("Seconds to Trust an Idle Pool Connection")]),e._v(" "),t("td",[e._v("The number of seconds within a connection use that WebLogic Server trusts that the connection is still viable and will skip the connection test, either before delivering it to an application or during the periodic connection testing process.This option is an optimization that minimizes the performance impact of connection testing, especially during heavy traffic.MBean Attribute (Does not apply to application modules): "),t("code",[e._v("JDBCConnectionPoolParamsBean.SecondsToTrustAnIdlePoolConnection")]),e._v("Minimum value: "),t("code",[e._v("0")]),e._v("Maximum value: "),t("code",[e._v("2147483647")])])]),e._v(" "),t("tr",[t("td",[e._v("Shrink Frequency")]),e._v(" "),t("td",[e._v("The number of seconds to wait before shrinking a connection pool that has incrementally increased to meet demand.When set to "),t("code",[e._v("0")]),e._v(", shrinking is disabled.MBean Attribute (Does not apply to application modules): "),t("code",[e._v("JDBCConnectionPoolParamsBean.ShrinkFrequencySeconds")]),e._v("Minimum value: "),t("code",[e._v("0")]),e._v("Maximum value: "),t("code",[e._v("2147483647")])])]),e._v(" "),t("tr",[t("td",[e._v("Connection Creation Retry Frequency")]),e._v(" "),t("td",[e._v("The number of seconds between attempts to establish connections to the database.If you do not set this value, data source creation fails if the database is unavailable. If set and if the database is unavailable when the data source is created, WebLogic Server will attempt to create connections in the pool again after the number of seconds you specify, and will continue to attempt to create the connections until it succeeds.When set to "),t("code",[e._v("0")]),e._v(", connection retry is disabled.MBean Attribute (Does not apply to application modules): "),t("code",[e._v("JDBCConnectionPoolParamsBean.ConnectionCreationRetryFrequencySeconds")]),e._v("Minimum value: "),t("code",[e._v("0")]),e._v("Maximum value: "),t("code",[e._v("2147483647")])])]),e._v(" "),t("tr",[t("td",[e._v("Login Delay")]),e._v(" "),t("td",[e._v("The number of seconds to delay before creating each physical database connection. This delay supports database servers that cannot handle multiple connection requests in rapid succession.The delay takes place both during initial data source creation and during the lifetime of the data source whenever a physical database connection is created.MBean Attribute (Does not apply to application modules): "),t("code",[e._v("JDBCConnectionPoolParamsBean.LoginDelaySeconds")]),e._v("Minimum value: "),t("code",[e._v("0")]),e._v("Maximum value: "),t("code",[e._v("2147483647")]),t("a",{attrs:{href:"https://docs.oracle.com/cd/E13222_01/wls/docs90/ConsoleHelp/core/restart.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Changes take effect after you redeploy the module or restart the server."),t("OutboundLink")],1)])]),e._v(" "),t("tr",[t("td",[e._v("Profile Connection Usage")]),e._v(" "),t("td",[e._v("Collect profile information about threads currently using connections from the pool of connections in the data source.MBean Attribute (Does not apply to application modules): "),t("code",[e._v("JDBCConnectionPoolParamsBean.ProfileType")])])]),e._v(" "),t("tr",[t("td",[e._v("Profile Connection Reservation Wait")]),e._v(" "),t("td",[e._v("Collect profile information about threads currently waiting to reserve a connection from the data source.MBean Attribute (Does not apply to application modules): "),t("code",[e._v("JDBCConnectionPoolParamsBean.ProfileType")])])]),e._v(" "),t("tr",[t("td",[e._v("Profile Connection Leak")]),e._v(" "),t("td",[e._v("Collect profile information about threads that have reserved a connection from the data source and the connection leaked (was not properly returned to the pool of connections).MBean Attribute (Does not apply to application modules): "),t("code",[e._v("JDBCConnectionPoolParamsBean.ProfileType")])])]),e._v(" "),t("tr",[t("td",[e._v("Profile Connection Reservation Failed")]),e._v(" "),t("td",[e._v("Collect profile information about threads that attempt to reserve a connection from the data source but fail.MBean Attribute (Does not apply to application modules): "),t("code",[e._v("JDBCConnectionPoolParamsBean.ProfileType")])])]),e._v(" "),t("tr",[t("td",[e._v("Profile Statement Cache Entry")]),e._v(" "),t("td",[e._v("Collect profile information for prepared and callable statements added to the statement cache, and for the threads that originated the cached statements.MBean Attribute (Does not apply to application modules): "),t("code",[e._v("JDBCConnectionPoolParamsBean.ProfileType")])])]),e._v(" "),t("tr",[t("td",[e._v("Profile Statement Usage")]),e._v(" "),t("td",[e._v("Collect profile information about threads currently executing SQL statements from the statement cache.MBean Attribute (Does not apply to application modules): "),t("code",[e._v("JDBCConnectionPoolParamsBean.ProfileType")])])]),e._v(" "),t("tr",[t("td",[e._v("Profile Connection Last Usage")]),e._v(" "),t("td",[e._v("Collect profile information about the previous thread that last used the connection.This information is useful when debugging problems with connections infected with pending transactions that cause subsequent XA operations on the connections to fail.MBean Attribute (Does not apply to application modules): "),t("code",[e._v("JDBCConnectionPoolParamsBean.ProfileType")])])]),e._v(" "),t("tr",[t("td",[e._v("Profile Connection Multithreaded Usage")]),e._v(" "),t("td",[e._v("Collect profile information about threads that erroneously use a connection previously obtained by a different thread.MBean Attribute (Does not apply to application modules): "),t("code",[e._v("JDBCConnectionPoolParamsBean.ProfileType")])])]),e._v(" "),t("tr",[t("td",[e._v("Profile Harvest Frequency Seconds")]),e._v(" "),t("td",[e._v("The number of seconds between when WebLogic Server harvests profile data.When set to "),t("code",[e._v("0")]),e._v(", harvesting of data is disabled.MBean Attribute (Does not apply to application modules): "),t("code",[e._v("JDBCConnectionPoolParamsBean.ProfileHarvestFrequencySeconds")]),e._v("Minimum value: "),t("code",[e._v("0")]),e._v("Maximum value: "),t("code",[e._v("2147483647")])])]),e._v(" "),t("tr",[t("td",[e._v("Driver Interceptor")]),e._v(" "),t("td",[e._v("Specifies the absolute name of the application class used to intercept method calls to the JDBC driver. The application specified must implement the weblogic.jdbc.extensions.DriverInterceptor interface.Weblogic Server will invoke the preInvokeCallback(), postInvokeExceptionCallback(), and postInvokeCallback() methods of the registered application before and after invoking any method inside the JDBC driver. You can use this feature to profile JDBC driver usage and monitor:Methods being executedAny exceptions thrownTime spent inside the driver executing methodsMBean Attribute (Does not apply to application modules): "),t("code",[e._v("JDBCConnectionPoolParamsBean.DriverInterceptor")]),t("a",{attrs:{href:"https://docs.oracle.com/cd/E13222_01/wls/docs90/ConsoleHelp/core/restart.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Changes take effect after you redeploy the module or restart the server."),t("OutboundLink")],1)])]),e._v(" "),t("tr",[t("td",[e._v("Enable Credential Mapping")]),e._v(" "),t("td",[e._v("Enables credential mapping for the data source. When an application requests a database connection, WebLogic Server sets a light-weight client ID on the database connection based on a map of database IDs.You must also specify the map of WebLogic Server user IDs to database user IDs (credential mapping).This feature relies on features in the JDBC driver and DBMS. It is not supported with all drivers and DBMSs.MBean Attribute (Does not apply to application modules): "),t("code",[e._v("JDBCConnectionPoolParamsBean.CredentialMappingEnabled")]),t("a",{attrs:{href:"https://docs.oracle.com/cd/E13222_01/wls/docs90/ConsoleHelp/core/restart.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Changes take effect after you redeploy the module or restart the server."),t("OutboundLink")],1)])]),e._v(" "),t("tr",[t("td",[e._v("Inactive Connection Timeout")]),e._v(" "),t("td",[e._v("The number of inactive seconds on a reserved connection before WebLogic Server reclaims the connection and releases it back into the connection pool.You can use the Inactive Connection Timeout feature to reclaim leaked connections - connections that were not explicitly closed by the application. Note that this feature is not intended to be used in place of properly closing connections.When set to "),t("code",[e._v("0")]),e._v(", the feature is disabled.MBean Attribute (Does not apply to application modules): "),t("code",[e._v("JDBCConnectionPoolParamsBean.InactiveConnectionTimeoutSeconds")]),e._v("Minimum value: "),t("code",[e._v("0")]),e._v("Maximum value: "),t("code",[e._v("2147483647")])])]),e._v(" "),t("tr",[t("td",[e._v("Maximum Waiting for Connection")]),e._v(" "),t("td",[e._v("The maximum number of connection requests that can concurrently block threads while waiting to reserve a connection from the data soiurce's connection pool.MBean Attribute (Does not apply to application modules): "),t("code",[e._v("JDBCConnectionPoolParamsBean.HighestNumWaiters")]),e._v("Minimum value: "),t("code",[e._v("0")]),e._v("Maximum value: "),t("code",[e._v("2147483647")])])]),e._v(" "),t("tr",[t("td",[e._v("Connection Reserve Timeout")]),e._v(" "),t("td",[e._v("The number of seconds after which a call to reserve a connection from the connection pool will timeout.When set to "),t("code",[e._v("0")]),e._v(", a call will never timeout.When set to "),t("code",[e._v("-1")]),e._v(", a call will timeout immediately.MBean Attribute (Does not apply to application modules): "),t("code",[e._v("JDBCConnectionPoolParamsBean.ConnectionReserveTimeoutSeconds")]),e._v("Minimum value: "),t("code",[e._v("-1")]),e._v("Maximum value: "),t("code",[e._v("2147483647")])])]),e._v(" "),t("tr",[t("td",[e._v("Statement Timeout")]),e._v(" "),t("td",[e._v("The time after which a statement currently being executed will time out.StatementTimeout relies on underlying JDBC driver support. WebLogic Server passes the time specified to the JDBC driver using the "),t("code",[e._v("java.sql.Statement.setQueryTimeout()")]),e._v(" method. If your JDBC driver does not support this method, it may throw an exception and the timeout value is ignored.A value of "),t("code",[e._v("-1")]),e._v(" disables this feature.A value of "),t("code",[e._v("0")]),e._v(" means that statements will not time out.MBean Attribute (Does not apply to application modules): "),t("code",[e._v("JDBCConnectionPoolParamsBean.StatementTimeout")]),e._v("Minimum value: "),t("code",[e._v("-1")]),e._v("Maximum value: "),t("code",[e._v("2147483647")]),t("a",{attrs:{href:"https://docs.oracle.com/cd/E13222_01/wls/docs90/ConsoleHelp/core/restart.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Changes take effect after you redeploy the module or restart the server."),t("OutboundLink")],1)])]),e._v(" "),t("tr",[t("td",[e._v("Ignore In-Use Connections")]),e._v(" "),t("td",[e._v("Enables the data source to be shutdown even if connections obtained from the pool are still in use.MBean Attribute (Does not apply to application modules): "),t("code",[e._v("JDBCConnectionPoolParamsBean.IgnoreInUseConnectionsEnabled")]),t("a",{attrs:{href:"https://docs.oracle.com/cd/E13222_01/wls/docs90/ConsoleHelp/core/restart.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Changes take effect after you redeploy the module or restart the server."),t("OutboundLink")],1)])]),e._v(" "),t("tr",[t("td",[e._v("Pinned-To-Thread")]),e._v(" "),t("td",[e._v("PinnedToThread is an option that can improve performance by enabling execute threads to keep a pooled database connection even after the application closes the logical connection.When PinnedToThread is enabled, WebLogic Server pins a database connection from the connection pool to an execution thread the first time an application uses the thread to reserve a connection. When the application finishes using the connection and calls connection.close(), which otherwise returns the connection to the connection pool, WebLogic Server keeps the connection with the execute thread and does not return it to the connection pool. When an application subsequently requests a connection using the same execute thread, WebLogic Server provides the connection already reserved by the thread.With PinnedToThread, there is no locking contention on the connection pool that occurs when multiple threads attempt to reserve a connection at the same time and there is no contention for threads that attempt to reserve the same connection from a limited number of database connections.If an application concurrently reserves more than one connection from the connection pool using the same execute thread, WebLogic Server creates additional database connections and pins them to the thread, as well.MBean Attribute (Does not apply to application modules): "),t("code",[e._v("JDBCConnectionPoolParamsBean.PinnedToThread")]),t("a",{attrs:{href:"https://docs.oracle.com/cd/E13222_01/wls/docs90/ConsoleHelp/core/restart.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Changes take effect after you redeploy the module or restart the server."),t("OutboundLink")],1)])]),e._v(" "),t("tr",[t("td",[e._v("Remove Infected Connections Enabled")]),e._v(" "),t("td",[e._v("Specifies whether a connection will be removed from the connection pool after the application uses the underlying vendor connection object.If you disable removing infected connections, you must make sure that the database connection is suitable for reuse by other applications.When set to "),t("code",[e._v("true")]),e._v(" (the default), the physical connection is not returned to the connection pool after the application closes the logical connection. Instead, the physical connection is closed and recreated.When set to "),t("code",[e._v("false")]),e._v(", when the application closes the logical connection, the physical connection is returned to the connection pool and can be reused by the application or by another application.MBean Attribute (Does not apply to application modules): "),t("code",[e._v("JDBCConnectionPoolParamsBean.RemoveInfectedConnections")]),t("a",{attrs:{href:"https://docs.oracle.com/cd/E13222_01/wls/docs90/ConsoleHelp/core/restart.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Changes take effect after you redeploy the module or restart the server."),t("OutboundLink")],1)])]),e._v(" "),t("tr",[t("td",[e._v("Use XA Datasource Interface")]),e._v(" "),t("td",[e._v("Specifies that WebLogic Server should use the XA interface of the JDBC driver.If the JDBC driver class used to create database connections implements both XA and non-XA versions of a JDBC driver, you can set this attribute to indicate that WebLogic Server should treat the JDBC driver as an XA driver or as a non-XA driver.MBean Attribute (Does not apply to application modules): "),t("code",[e._v("JDBCDriverParamsBean.UseXaDataSourceInterface")]),t("a",{attrs:{href:"https://docs.oracle.com/cd/E13222_01/wls/docs90/ConsoleHelp/core/restart.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Changes take effect after you redeploy the module or restart the server."),t("OutboundLink")],1)])]),e._v(" "),t("tr",[t("td",[e._v("Set XA Transaction Timeout")]),e._v(" "),t("td",[e._v("Enables WebLogic Server to set a transaction branch timeout based on the value for XaTransactionTimeout.When enabled, the WebLogic Server Transaction Manager calls "),t("code",[e._v("XAResource.setTransactionTimeout()")]),e._v(" before calling "),t("code",[e._v("XAResource.start")]),e._v(", and passes either the XA Transaction Timeout value or the global transaction timeout.You may want to set a transaction branch timeout if you have long-running transactions that exceed the default timeout value on the XA resource."),t("strong",[e._v("Note:")]),e._v(" To use this feature, the resource manager (typically, the JDBC driver) must support the "),t("code",[e._v("javax.transaction.xa.XAResource.setTransactionTimeout()")]),e._v(" method.MBean Attribute (Does not apply to application modules): "),t("code",[e._v("JDBCXAParamsBean.XaSetTransactionTimeout")]),t("a",{attrs:{href:"https://docs.oracle.com/cd/E13222_01/wls/docs90/ConsoleHelp/core/restart.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Changes take effect after you redeploy the module or restart the server."),t("OutboundLink")],1)])]),e._v(" "),t("tr",[t("td",[e._v("XA Transaction Timeout")]),e._v(" "),t("td",[e._v("The number of seconds to set as the transaction branch timeout.If set, this value is passed as the transaction timeout value in the "),t("code",[e._v("XAResource.setTransactionTimeout()")]),e._v(" call on the XA resource manager, typically the JDBC driver.When this value is set to "),t("code",[e._v("0")]),e._v(", the WebLogic Server Transaction Manager passes the global WebLogic Server transaction timeout in seconds in the method.If set, this value should be greater than or equal to the global WebLogic Server transaction timeout."),t("strong",[e._v("Note:")]),e._v(" You must enable XaSetTransactionTimeout to enable setting the transaction branch timeout.MBean Attribute (Does not apply to application modules): "),t("code",[e._v("JDBCXAParamsBean.XaTransactionTimeout")]),t("a",{attrs:{href:"https://docs.oracle.com/cd/E13222_01/wls/docs90/ConsoleHelp/core/restart.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Changes take effect after you redeploy the module or restart the server."),t("OutboundLink")],1)])]),e._v(" "),t("tr",[t("td",[e._v("XA Retry Duration")]),e._v(" "),t("td",[e._v("Determines the duration in seconds for which the transaction manager will perform recover operations on the resource. A value of zero indicates that no retries will be performed.MBean Attribute (Does not apply to application modules): "),t("code",[e._v("JDBCXAParamsBean.XaRetryDurationSeconds")]),t("a",{attrs:{href:"https://docs.oracle.com/cd/E13222_01/wls/docs90/ConsoleHelp/core/restart.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Changes take effect after you redeploy the module or restart the server."),t("OutboundLink")],1)])]),e._v(" "),t("tr",[t("td",[e._v("XA Retry Interval")]),e._v(" "),t("td",[e._v("The number of seconds between XA retry operations if XARetryDurationSeconds is set to a positive value.MBean Attribute (Does not apply to application modules): "),t("code",[e._v("JDBCXAParamsBean.XaRetryIntervalSeconds")]),t("a",{attrs:{href:"https://docs.oracle.com/cd/E13222_01/wls/docs90/ConsoleHelp/core/restart.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Changes take effect after you redeploy the module or restart the server."),t("OutboundLink")],1)])]),e._v(" "),t("tr",[t("td",[e._v("Keep XA Connection Until Transaction Complete")]),e._v(" "),t("td",[e._v("Enables WebLogic Server to associate the same XA database connection from the connection pool with a global transaction until the transaction completes.Only applies to connection pools that use an XA driver.Use this setting to work around specific problems with JDBC XA drivers.MBean Attribute (Does not apply to application modules): "),t("code",[e._v("JDBCXAParamsBean.KeepXaConnTillTxComplete")]),t("a",{attrs:{href:"https://docs.oracle.com/cd/E13222_01/wls/docs90/ConsoleHelp/core/restart.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Changes take effect after you redeploy the module or restart the server."),t("OutboundLink")],1)])]),e._v(" "),t("tr",[t("td",[e._v("Need Transaction Context On Close")]),e._v(" "),t("td",[e._v("Specifies whether the XA driver requires a distributed transaction context when closing various JDBC objects (result sets, statements, connections, and so forth). Only applies to connection pools that use an XA driver.When enabled, SQL exceptions that are thrown while closing the JDBC objects without a transaction context will be suppressed.Use this setting to work around specific problems with JDBC XA drivers.MBean Attribute (Does not apply to application modules): "),t("code",[e._v("JDBCXAParamsBean.NeedTxCtxOnClose")]),t("a",{attrs:{href:"https://docs.oracle.com/cd/E13222_01/wls/docs90/ConsoleHelp/core/restart.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Changes take effect after you redeploy the module or restart the server."),t("OutboundLink")],1)])]),e._v(" "),t("tr",[t("td",[e._v("New XA Connection For Commit")]),e._v(" "),t("td",[e._v("Specifies that a dedicated XA connection is used for commit and rollback processing for a global transaction.Only applies to data sources that use an XA driver.Use this setting to work around specific problems with JDBC XA drivers.MBean Attribute (Does not apply to application modules): "),t("code",[e._v("JDBCXAParamsBean.NewXaConnForCommit")]),t("a",{attrs:{href:"https://docs.oracle.com/cd/E13222_01/wls/docs90/ConsoleHelp/core/restart.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Changes take effect after you redeploy the module or restart the server."),t("OutboundLink")],1)])]),e._v(" "),t("tr",[t("td",[e._v("XA End Only Once")]),e._v(" "),t("td",[e._v("Specifies that "),t("code",[e._v("XAResource.end()")]),e._v(" is called only once for each pending "),t("code",[e._v("XAResource.start()")]),e._v(".This option prevents the XA driver from calling "),t("code",[e._v("XAResource.end(TMSUSPEND)")]),e._v(" and "),t("code",[e._v("XAResource.end(TMSUCCESS)")]),e._v(" successively. Only applies to data sources that use an XA driver.Use this setting to work around specific problems with JDBC XA drivers.MBean Attribute (Does not apply to application modules): "),t("code",[e._v("JDBCXAParamsBean.XaEndOnlyOnce")]),t("a",{attrs:{href:"https://docs.oracle.com/cd/E13222_01/wls/docs90/ConsoleHelp/core/restart.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Changes take effect after you redeploy the module or restart the server."),t("OutboundLink")],1)])]),e._v(" "),t("tr",[t("td",[e._v("Keep Connection Open On Release")]),e._v(" "),t("td",[e._v("Enables WebLogic Server to keep the logical JDBC connection open for a global transaction when the physical XA connection is returned to the connection pool.Select this option if the XA driver used to create database connections or the DBMS requires that a logical JDBC connection be kept open while transaction processing continues (although the physical XA connection can returned to the connection pool).Only applies to data sources that use an XA driver.Use this setting to work around specific problems with JDBC XA drivers.MBean Attribute (Does not apply to application modules): "),t("code",[e._v("JDBCXAParamsBean.KeepLogicalConnOpenOnRelease")]),t("a",{attrs:{href:"https://docs.oracle.com/cd/E13222_01/wls/docs90/ConsoleHelp/core/restart.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Changes take effect after you redeploy the module or restart the server."),t("OutboundLink")],1)])]),e._v(" "),t("tr",[t("td",[e._v("Resource Health Monitoring")]),e._v(" "),t("td",[e._v("Enables JTA resource health monitoring for an XA data source. When enabled, if an XA resource fails to respond to an XA call within the period specified in MaxXACallMillis, WebLogic Server marks the data source as unhealthy and blocks any further calls to the resource.This property applies to XA data sources only, and is ignored for data sources that use a non-XA driver.MBean Attribute (Does not apply to application modules): "),t("code",[e._v("JDBCXAParamsBean.ResourceHealthMonitoring")]),t("a",{attrs:{href:"https://docs.oracle.com/cd/E13222_01/wls/docs90/ConsoleHelp/core/restart.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Changes take effect after you redeploy the module or restart the server."),t("OutboundLink")],1)])]),e._v(" "),t("tr",[t("td",[e._v("Recover Only Once")]),e._v(" "),t("td",[e._v("Specifies that the transaction manager calls recover on the resource only once. Only applies to data sources that use an XA driver.Use this setting to work around specific problems with JDBC XA drivers.MBean Attribute (Does not apply to application modules): "),t("code",[e._v("JDBCXAParamsBean.RecoverOnlyOnce")]),t("a",{attrs:{href:"https://docs.oracle.com/cd/E13222_01/wls/docs90/ConsoleHelp/core/restart.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Changes take effect after you redeploy the module or restart the server."),t("OutboundLink")],1)])]),e._v(" "),t("tr",[t("td",[e._v("Rollback Locak Tx Upon Connection Close")]),e._v(" "),t("td",[e._v("Enables WebLogic Server to call "),t("code",[e._v("rollback()")]),e._v(" on the connection before returning the connection to the connection pool.Enabling this attribute will have a performance impact as the rollback call requires communication with the database server.MBean Attribute (Does not apply to application modules): "),t("code",[e._v("JDBCXAParamsBean.RollbackLocalTxUponConnClose")]),t("a",{attrs:{href:"https://docs.oracle.com/cd/E13222_01/wls/docs90/ConsoleHelp/core/restart.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Changes take effect after you redeploy the module or restart the server."),t("OutboundLink")],1)])])])])])}),[],!1,null,null,null);t.default=a.exports}}]);